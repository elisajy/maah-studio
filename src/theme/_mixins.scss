@use "./variables" as var;

// Responsive breakpoints
@mixin mobile {
  @media (max-width: #{var.$breakpoint-tablet - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{var.$breakpoint-tablet}) and (max-width: #{var.$breakpoint-desktop - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{var.$breakpoint-desktop}) {
    @content;
  }
}

@mixin large-desktop {
  @media (min-width: #{var.$breakpoint-large}) {
    @content;
  }
}

// Media query for max-width (mobile-first approach)
@mixin respond-to($breakpoint) {
  @media (min-width: map-get($breakpoints, $breakpoint)) {
    @content;
  }
}

// Flexbox mixins
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) { // Fixed: removed `var.` from parameters
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Typography mixins
@mixin heading($size: lg) { // Fixed: removed `var.` from parameters
  font-family: var.$font-family-secondary;
  font-weight: 400;
  line-height: 1.3;
  
  @if $size == sm {
    font-size: var.$font-size-lg;
  } @else if $size == md {
    font-size: var.$font-size-xl;
  } @else if $size == lg {
    font-size: var.$font-size-xxl;
  } @else if $size == xl {
    font-size: var.$font-size-xxxl;
  }
}

@mixin body-text($size: md) { // Fixed: removed `var.` from parameters
  font-family: var.$font-family-primary;
  line-height: 1.6;
  
  @if $size == sm {
    font-size: var.$font-size-sm;
  } @else if $size == md {
    font-size: var.$font-size-md;
  } @else if $size == lg {
    font-size: var.$font-size-lg;
  }
}

// Animation mixins
@mixin fade-in($duration: 0.3s) { // Fixed: removed `var.` from parameters
  animation: fadeIn $duration ease-in-out;
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
}

@mixin hover-effect {
  transition: all var.$transition-fast;
  
  &:hover {
    opacity: 0.8;
    transform: translateY(-2px);
  }
}

// Button mixins
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

@mixin button($bg-color: var.$accent-color, $text-color: white, $padding: var.$spacing-sm var.$spacing-lg) { // Fixed: removed `var.` from parameters
  @include button-reset;
  display: inline-block;
  background-color: $bg-color; // Use the parameter directly
  color: $text-color; // Use the parameter directly
  padding: $padding; // Use the parameter directly
  border-radius: 2px;
  text-align: center;
  transition: all var.$transition-fast;
  
  &:hover {
    opacity: 0.9;
  }
}
